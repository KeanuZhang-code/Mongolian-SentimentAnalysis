# 蒙古语情感分析项目解析报告

## 1. 项目概述
该项目是一个基于深度学习的蒙古语情感分析系统，能够识别蒙古语文本中的七种情感倾向：高兴、生气、欣赏、厌烦、害怕、忧愁和惊吓。项目主要由两部分组成：模型训练模块（MODELtest.py）和图形用户界面（GUItest.py）。

## 2. 数据集介绍

### 2.1 数据来源
项目使用的数据集存储在`data/Mongolian_Datasets`目录下，包含7个文本文件，每个文件对应一种情感类别。

### 2.2 数据格式
- 每个文件以情感类别命名（如"高兴.txt"、"生气.txt"等）
- 文件内容为蒙古语文本，每行一条数据
- 每行数据格式：类别标识符;文本内容

### 2.3 数据规模
- 高兴.txt: 225条记录
- 生气.txt: 360条记录
- 其他类别数据类似
- 总计约1500-2000条蒙古语情感文本数据

## 3. 文本预处理过程

### 3.1 数据加载
通过`get_df_from_txt`函数从文本文件中读取数据，将不同类别的数据合并到一个DataFrame中。

### 3.2 文本清洗
使用`clean_str`函数对文本进行预处理：
- 去除标点符号
- 去除网页标签
- 去除数字和英文字符
- 去除非中文字符
- 转换为小写并去除首尾空格

### 3.3 文本向量化
使用`get_texts_vector`函数进行文本向量化处理：
- 使用Keras的Tokenizer进行文本分词（设置char_level=True，表示按字切分）
- 将文本转换为整数序列
- 使用pad_sequences进行序列填充，确保所有文本长度一致
- 最大长度取数据集文本长度的最大值

### 3.4 标签处理
- 使用LabelEncoder将文本标签转换为数字标签
- 构建数字到文本标签的映射关系
- 将标签转换为独热编码格式，用于模型训练

## 4. 深度学习模型架构

项目采用CNN（卷积神经网络）模型进行情感分析，具体架构如下：

### 4.1 模型结构
1. **输入层**：接收固定长度的文本序列
2. **嵌入层**：将整数序列转换为词向量
   - 词汇表大小：由数据集决定
   - 嵌入维度：128
3. **多尺寸卷积层**：
   - 使用三种不同尺寸的卷积核(3,4,5)
   - 每个卷积核数量：64
   - 激活函数：ReLU
4. **全局最大池化层**：对每个卷积核的输出进行池化
5. **Dropout层**：随机失活率0.5，防止过拟合
6. **特征拼接**：将不同卷积核提取的特征拼接在一起
7. **全连接层**：256个神经元，ReLU激活函数
8. **输出层**：7个神经元，softmax激活函数，对应7种情感类别

### 4.2 模型参数
- 优化器：Adam，学习率0.001
- 损失函数：categorical_crossentropy
- 评价指标：准确率(accuracy)
- 批次大小：64
- 训练轮次：20
- Dropout率：0.5
- 嵌入维度：128

## 5. 模型训练过程

### 5.1 数据准备
- 加载并预处理所有数据
- 将数据集按8:2的比例划分为训练集和测试集
- 将标签转换为独热编码格式

### 5.2 模型构建与编译
- 调用`build_cnn_model`函数构建模型
- 使用Adam优化器和categorical_crossentropy损失函数编译模型

### 5.3 训练执行
- 使用`fit`函数进行模型训练
- 训练过程中使用CSVLogger记录训练日志
- 训练完成后保存模型和权重

### 5.4 模型保存
- 完整模型：`model/model.h5`
- 模型权重：`model/model_weights.h5`
- 训练信息：`model/train_info.pkl`
- 最终信息（用于预测）：`model/final_info.pkl`

## 6. 模型评估与结果

### 6.1 评估指标
- 准确率(accuracy)
- 精确率(precision)
- 召回率(recall)
- F1分数(F1-score)
- 分类报告

### 6.2 评估过程
- 在测试集上进行预测
- 计算各项评估指标
- 生成分类报告
- 绘制训练过程中的损失和准确率曲线

### 6.3 预测功能
通过`predict_text_label`函数实现单个文本的情感预测：
- 加载保存的模型和相关信息
- 对输入文本进行预处理和向量化
- 使用模型进行预测并输出结果

## 7. 图形用户界面

项目提供了基于Tkinter的图形用户界面，主要功能包括：

### 7.1 界面布局
- 左侧：文本输入区域
- 右侧：情感分析结果显示区域
- 底部：操作按钮和状态显示

### 7.2 主要功能
- 文本输入和编辑
- 情感分析
- 文件操作（新建、打开、保存）
- 帮助信息和关于对话框
- 快捷键支持

### 7.3 工作流程
- 加载预训练模型
- 用户输入或加载蒙古语文本
- 点击"开始情感分析"按钮
- 显示情感类别和简要说明

## 8. 项目目录结构
```
SentmentAnalysis_cnn/
├── GUItest.py        # 图形用户界面代码
├── MODELtest.py      # 模型训练和测试代码
├── data/
│   └── Mongolian_Datasets/  # 蒙古语情感数据集
│       ├── 厌烦.txt
│       ├── 害怕.txt
│       ├── 忧愁.txt
│       ├── 惊吓.txt
│       ├── 欣赏.txt
│       ├── 生气.txt
│       └── 高兴.txt
├── logs/
│   └── training_log.csv     # 训练日志
└── model/
    ├── final_info.pkl       # 最终模型信息（用于预测）
    ├── model.h5             # 完整模型
    ├── model_weights.h5     # 模型权重
    └── train_info.pkl       # 训练过程信息
```

## 9. 技术亮点

1. **多尺寸卷积核**：使用不同尺寸的卷积核(3,4,5)提取不同粒度的特征，提高模型表现力

2. **字符级处理**：针对蒙古语特点，采用字符级别的处理方式，避免分词带来的问题

3. **Dropout机制**：在多个层使用Dropout，有效防止模型过拟合

4. **完整工作流**：包含数据预处理、模型训练、评估和部署的完整工作流程

5. **用户友好界面**：提供直观的GUI，方便用户使用模型进行情感分析

## 10. 总结与展望

该项目成功实现了蒙古语情感分析系统，通过深度学习算法能够有效识别蒙古语文本中的七种情感倾向。项目的主要价值在于：

1. 为蒙古语文本处理提供了一个实用的情感分析工具
2. 展示了如何将深度学习技术应用于少数民族语言处理
3. 提供了完整的代码实现和用户界面

未来可以从以下方面进一步改进：
1. 扩大数据集规模，提高模型的泛化能力
2. 尝试其他深度学习模型（如LSTM、BERT等）进行对比
3. 优化模型参数，提高分类准确率
4. 增加更多情感类别，提升系统的实用性
5. 改进界面设计，提供更多功能如批量分析、可视化等